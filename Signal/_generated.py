"""Auto-generated DBus bindings

Generated by jeepney version 0.7.1

Object path: /org/asamk/Signal
Bus name   : org.asamk.Signal
"""

from jeepney.wrappers import MessageGenerator, new_method_call


class Signal(MessageGenerator):
    interface = "org.asamk.Signal"

    def __init__(
        self, object_path="/org/asamk/Signal", bus_name="org.asamk.Signal"
    ):
        super().__init__(object_path=object_path, bus_name=bus_name)

    def version(self):
        return new_method_call(self, "version")

    def isRegistered(self, arg0):
        return new_method_call(self, "isRegistered", "as", (arg0,))

    def isRegistered(self):
        return new_method_call(self, "isRegistered")

    def isRegistered(self, arg0):
        return new_method_call(self, "isRegistered", "s", (arg0,))

    def unregister(self):
        return new_method_call(self, "unregister")

    def createGroup(self, arg0, arg1, arg2):
        return new_method_call(self, "createGroup", "sass", (arg0, arg1, arg2))

    def getSelfNumber(self):
        return new_method_call(self, "getSelfNumber")

    def deleteAccount(self):
        return new_method_call(self, "deleteAccount")

    def quitGroup(self, arg0):
        return new_method_call(self, "quitGroup", "ay", (arg0,))

    def updateGroup(self, arg0, arg1, arg2, arg3):
        return new_method_call(
            self, "updateGroup", "aysass", (arg0, arg1, arg2, arg3)
        )

    def joinGroup(self, arg0):
        return new_method_call(self, "joinGroup", "s", (arg0,))

    def sendReadReceipt(self, arg0, arg1):
        return new_method_call(self, "sendReadReceipt", "sax", (arg0, arg1))

    def sendViewedReceipt(self, arg0, arg1):
        return new_method_call(self, "sendViewedReceipt", "sax", (arg0, arg1))

    def sendMessage(self, arg0, arg1, arg2):
        return new_method_call(self, "sendMessage", "sass", (arg0, arg1, arg2))

    def sendMessage(self, arg0, arg1, arg2):
        return new_method_call(
            self, "sendMessage", "sasas", (arg0, arg1, arg2)
        )

    def sendRemoteDeleteMessage(self, arg0, arg1):
        return new_method_call(
            self, "sendRemoteDeleteMessage", "xs", (arg0, arg1)
        )

    def sendRemoteDeleteMessage(self, arg0, arg1):
        return new_method_call(
            self, "sendRemoteDeleteMessage", "xas", (arg0, arg1)
        )

    def sendMessageReaction(self, arg0, arg1, arg2, arg3, arg4):
        return new_method_call(
            self,
            "sendMessageReaction",
            "sbsxs",
            (arg0, arg1, arg2, arg3, arg4),
        )

    def sendMessageReaction(self, arg0, arg1, arg2, arg3, arg4):
        return new_method_call(
            self,
            "sendMessageReaction",
            "sbsxas",
            (arg0, arg1, arg2, arg3, arg4),
        )

    def sendEndSessionMessage(self, arg0):
        return new_method_call(self, "sendEndSessionMessage", "as", (arg0,))

    def deleteRecipient(self, arg0):
        return new_method_call(self, "deleteRecipient", "s", (arg0,))

    def deleteContact(self, arg0):
        return new_method_call(self, "deleteContact", "s", (arg0,))

    def setContactName(self, arg0, arg1):
        return new_method_call(self, "setContactName", "ss", (arg0, arg1))

    def setContactBlocked(self, arg0, arg1):
        return new_method_call(self, "setContactBlocked", "sb", (arg0, arg1))

    def setGroupBlocked(self, arg0, arg1):
        return new_method_call(self, "setGroupBlocked", "ayb", (arg0, arg1))

    def setExpirationTimer(self, arg0, arg1):
        return new_method_call(self, "setExpirationTimer", "si", (arg0, arg1))

    def uploadStickerPack(self, arg0):
        return new_method_call(self, "uploadStickerPack", "s", (arg0,))

    def isContactBlocked(self, arg0):
        return new_method_call(self, "isContactBlocked", "s", (arg0,))

    def sendContacts(self):
        return new_method_call(self, "sendContacts")

    def getGroup(self, arg0):
        return new_method_call(self, "getGroup", "ay", (arg0,))

    def getGroupIds(self):
        return new_method_call(self, "getGroupIds")

    def addDevice(self, arg0):
        return new_method_call(self, "addDevice", "s", (arg0,))

    def isMember(self, arg0):
        return new_method_call(self, "isMember", "ay", (arg0,))

    def listGroups(self):
        return new_method_call(self, "listGroups")

    def listDevices(self):
        return new_method_call(self, "listDevices")

    def removePin(self):
        return new_method_call(self, "removePin")

    def sendSyncRequest(self):
        return new_method_call(self, "sendSyncRequest")

    def setPin(self, arg0):
        return new_method_call(self, "setPin", "s", (arg0,))

    def submitRateLimitChallenge(self, arg0, arg1):
        return new_method_call(
            self, "submitRateLimitChallenge", "ss", (arg0, arg1)
        )

    def sendTyping(self, arg0, arg1):
        return new_method_call(self, "sendTyping", "sb", (arg0, arg1))

    def updateProfile(self, arg0, arg1, arg2, arg3, arg4):
        return new_method_call(
            self, "updateProfile", "ssssb", (arg0, arg1, arg2, arg3, arg4)
        )

    def updateProfile(self, arg0, arg1, arg2, arg3, arg4, arg5):
        return new_method_call(
            self,
            "updateProfile",
            "sssssb",
            (arg0, arg1, arg2, arg3, arg4, arg5),
        )

    def sendGroupMessage(self, arg0, arg1, arg2):
        return new_method_call(
            self, "sendGroupMessage", "sasay", (arg0, arg1, arg2)
        )

    def isGroupBlocked(self, arg0):
        return new_method_call(self, "isGroupBlocked", "ay", (arg0,))

    def subscribeReceive(self):
        return new_method_call(self, "subscribeReceive")

    def unsubscribeReceive(self):
        return new_method_call(self, "unsubscribeReceive")

    def getDevice(self, arg0):
        return new_method_call(self, "getDevice", "x", (arg0,))

    def getThisDevice(self):
        return new_method_call(self, "getThisDevice")

    def sendNoteToSelfMessage(self, arg0, arg1):
        return new_method_call(
            self, "sendNoteToSelfMessage", "sas", (arg0, arg1)
        )

    def sendGroupTyping(self, arg0, arg1):
        return new_method_call(self, "sendGroupTyping", "ayb", (arg0, arg1))

    def sendGroupRemoteDeleteMessage(self, arg0, arg1):
        return new_method_call(
            self, "sendGroupRemoteDeleteMessage", "xay", (arg0, arg1)
        )

    def sendGroupMessageReaction(self, arg0, arg1, arg2, arg3, arg4):
        return new_method_call(
            self,
            "sendGroupMessageReaction",
            "sbsxay",
            (arg0, arg1, arg2, arg3, arg4),
        )

    def getContactName(self, arg0):
        return new_method_call(self, "getContactName", "s", (arg0,))

    def getGroupName(self, arg0):
        return new_method_call(self, "getGroupName", "ay", (arg0,))

    def getGroupMembers(self, arg0):
        return new_method_call(self, "getGroupMembers", "ay", (arg0,))

    def listNumbers(self):
        return new_method_call(self, "listNumbers")

    def getContactNumber(self, arg0):
        return new_method_call(self, "getContactNumber", "s", (arg0,))
